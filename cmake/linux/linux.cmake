SET(DESTDIR "${CMAKE_BINARY_DIR}")
SET(CPACK_SET_DESTDIR "ON")
SET(CPACK_GENERATOR "DEB")
SET(CPACK_SOURCE_GENERATOR "")

IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
    SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
    #SET(CPACK_RPM_PACKAGE_ARCHITECTURE "x86_64")
ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
    SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
    #SET(CPACK_RPM_PACKAGE_ARCHITECTURE "i386")
ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")

SET(CPACK_PACKAGE_DEFAULT_LOCATION "/usr/share/${CPACK_PACKAGE_NAME}")
SET(CPACK_INSTALL_PREFIX "${CPACK_PACKAGE_DEFAULT_LOCATION}")
SET(CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}_${CPACK_PACKAGE_VERSION}")

SET(CPACK_DEBIAN_PACKAGE_HOMEPAGE "${PROJECT_HOMEPAGE}")
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER ${CPACK_PACKAGE_CONTACT}) #required

FILE(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/${ORG_PROJECT_NAME}.desktop" "\n[Desktop Entry]\n"
"Version=${CPACK_PACKAGE_VERSION}\n"
"Encoding=UTF-8\n"
"Name=openCONFIGURATOR\n"
"Type=Application\n"
"GenericName=openCONFIGURATOR\n"
"Comment=Graphical User Interface for openCONFIGURATOR\n"
"Exec=openCONFIGURATOR\n"
"Icon=flair\n"
"Categories=Development;\n"
"GenericName[en_IN]=openCONFIGURATOR\n"
"Name[en_IN]=openCONFIGURATOR")

FILE (GLOB_RECURSE desktopfile "${CMAKE_CURRENT_SOURCE_DIR}/openCONFIGURATOR.desktop")
INSTALL(FILES ${desktopfile} DESTINATION "/usr/share/applications")

FILE (GLOB_RECURSE imgfile "${CMAKE_CURRENT_SOURCE_DIR}/images/flair.svg")
INSTALL(FILES ${imgfile} DESTINATION "/usr/share/pixmaps")

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/cmake/linux/postinst.in
	DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
    FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
    NO_SOURCE_PERMISSIONS)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/cmake/linux/preinst.in
	DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
    FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
    NO_SOURCE_PERMISSIONS)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/cmake/linux/postrm.in
	DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
    FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
    NO_SOURCE_PERMISSIONS)

SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_BINARY_DIR}/postinst;${CMAKE_CURRENT_BINARY_DIR}/preinst;${CMAKE_CURRENT_BINARY_DIR}/postrm")


SET(PACKAGE_EXCLUDE_PLATFORM ".dll|.bat|.exe|.desktop")



SET(CPACK_STRIP_FILES ON)
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libxss1, tcl (>=8.5.0-2), tk8.5 (>=8.5.0-1), libxml2 (>=2.7.8), tclthread")
#SET(CPACK_DEBIAN_PACKAGE_RECOMMENDS "")
#SET(CPACK_DEBIAN_PACKAGE_SUGGESTS "")



#CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake/postinst" "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/scripts/postinst" @ONLY IMMEDIATE)
#FILE(COPY ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/scripts/postinst DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
#            FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
#CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake/preinst" "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/scripts/preinst" @ONLY IMMEDIATE)
#FILE(COPY ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/scripts/preinst DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
#            FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
#CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake/postrm" "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/scripts/postrm" @ONLY IMMEDIATE)
#FILE(COPY ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/scripts/postrm DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
#            FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)