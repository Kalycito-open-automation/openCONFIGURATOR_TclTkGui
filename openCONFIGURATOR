####################################################################################################
#
#
#  NAME:     openCONFIGURATOR
#
#  PURPOSE:  Sources all required files and Initializes the openCONFIGURATOR.
#
#  AUTHOR:   Kalycito Infotech Pvt Ltd
#
#  Copyright :(c) Kalycito Infotech Private Limited
#
#***************************************************************************************************
#  COPYRIGHT NOTICE: 
#
#  Project:      openCONFIGURATOR 
#
#  License:
#
#    Redistribution and use in source and binary forms, with or without
#    modification, are permitted provided that the following conditions
#    are met:
#
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
#    3. Neither the name of Kalycito Infotech Private Limited nor the names of 
#       its contributors may be used to endorse or promote products derived
#       from this software without prior written permission. For written
#       permission, please contact info@kalycito.com.
#
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#    COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGE.
#
#    Severability Clause:
#
#        If a provision of this License is or becomes illegal, invalid or
#        unenforceable in any jurisdiction, that shall not affect:
#        1. the validity or enforceability in that jurisdiction of any other
#           provision of this License; or
#        2. the validity or enforceability in other jurisdictions of that or
#           any other provision of this License.
#
#***************************************************************************************************
#
#  REVISION HISTORY:
#  
####################################################################################################


#!/bin/sh
#\
exec wish "$0" ${1+"$@"}

set version 1.0.0

if { $argc == 1 && ( $argv == "--version" || $argv == "-V" ) } {
    puts "\nDeveloped by Kalycito Powerlink Team\nopenCONFIGURATOR version $version\n"
    exit
} elseif { $argc != 0 } {
    puts "\noption $argv not supported\n"
    exit
}

if { [ catch { package require Tk 8.5 } ] } {
    tk_messageBox -message "Package TK 8.5 not found \nplease install Tk 8.5 and uninstall older version\nTo run the tool" -title Info -icon error
    exit
}

if { [ catch { package require Thread } ] } {
    tk_messageBox -message "Package Thread not found" -title Info -icon error
    exit
}


#-------------------------
#	Global variables
#-------------------------
global rootDir
global homeVar
global defaultProjectDir
global infoWindow
global warWindow
global errWindow

#-------------------------
#	Source files 
#-------------------------
#set rootDir [pwd]
if {"$tcl_platform(platform)" == "windows"} {
    set rootDir [pwd]
} elseif {"$tcl_platform(platform)" == "unix"} {
    set rootDir /usr/share/openCONFIGURATOR-0.9
}
tsv::set application rootDir $rootDir
source [file join $rootDir console.tcl]
source [file join $rootDir notebookManager.tcl]
source [file join $rootDir wrapperInteractions.tcl]
source [file join $rootDir childWindows.tcl]
source [file join $rootDir validation.tcl]
source [file join $rootDir operations.tcl]

#-------------------------
#	Package Definition
#-------------------------
set path_to_BWidget [file join $rootDir BWidget-1.2.1]
lappend auto_path $path_to_BWidget
package require -exact BWidget 1.2.1

#---------------------------------------------------------------------------------------------------
#  InitOpenConfigurator
# 
#  Arguments : argc  - string to be validate 
# 	           argv - Type for validation 
#
#  Results : -
#
#  Description : Creates the Main GUI of the application loads the shared objects or 
#				 dynamic linked libraries based on operating system. 
#---------------------------------------------------------------------------------------------------
proc InitOpenConfigurator {argc argv} {
	
    global tcl_platform
    global auto_path
    global treePath
    global projectDir
    global projectName
    global rootDir
    global defaultProjectDir

    lappend auto_path ..

    if {"$tcl_platform(platform)" != "windows"} {
	    # Background color based on OS
	    option add *background #d7d5d3 userDefault
    }

    # Title frame font set for tablelist widget
    option add *TitleFrame.font {helvetica 11 bold italic}
    
    if {"$tcl_platform(platform)" == "windows"} {
        if { [ catch {package require registry 1.0} ] } {
            set homeVar [file join $::env(HOME) Documents]
        } else {
            set homeVar [registry get {HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders} {Personal}]
        }
    } else {
        set homeVar [file join $::env(HOME) Documents]
    }
    if {[file exists $homeVar] && ![file isfile $homeVar]} {
	    #folder exists
    } else {
	    set homeVar [file join $::env(HOME) "My Documents"]
	    if { [file exists $homeVar] && ![file isfile $homeVar] } {
		    #folder exists
	    } else {
		    #Both the folders does not exist, create new folder "Documents" or "My Documents"
		    set result [tk_messageBox -message "Folder \"Documents\" and \"My Documents\" are not present. \n Do you want to create one? " -type yesno -title Info -icon error]
		    switch -- $result {
			    yes {
				    set homeVar [file join $::env(HOME) Documents]
				    file mkdir $homeVar
			    }
			    no { exit }
		    }
	    }
    }

    set defaultProjectDir [file join $homeVar openCONFIGURATOR_Projects]
    if { [file exists $defaultProjectDir] && ![file isfile $defaultProjectDir] } {
	    #directory already exists
    } else {
	    file mkdir $defaultProjectDir
    }

    # Draw the Main window
    wm withdraw .
    wm title . "openCONFIGURATOR"

    Operations::BasicFrames
    BWidget::place . 0 0 center
    update idletasks
    after idle {
	    wm deiconify .
	    raise .
	    focus .
    }

    # Loading shared libraries
    if {"$tcl_platform(platform)" == "windows"} {
	    if {[catch {load openCONFIGURATORwrapper.dll openCONFIGURATORwrapper}]} {
		    tk_messageBox -message "Error loading Shared Library\nCannot proceed\nTry reinstalling the tool" -title Info -icon error
		    exit
	    }
    } elseif { "$tcl_platform(platform)" == "unix"} {
	    if { [catch {load $rootDir/Tcl_WrapperMain.so}] } {
		    tk_messageBox -message "Error loading Shared Library\nCannot proceed\nTry reinstalling the tool" -title Info -icon error
		    exit
	    }
    } else {
		    tk_messageBox -message "Shared Library not created for $tcl_platform(platform) platform\nCannot proceed" -title Info -icon error
		    exit
    }	 

    $treePath delete end root ProjectNode
    set projectDir ""
    set projectName ""

    # Draw the Initial tree window  
    Operations::InsertTree
    # Childwindow for startup project window
    ChildWindows::StartUp
}
InitOpenConfigurator $argc $argv
